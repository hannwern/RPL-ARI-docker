# Source the correct base image
FROM registry.gitlab.com/pal-robotics/ari-0622/dockers/pal-gallium-pal-metapkg-development-ari-30-dev

# Set the environment variables for the nvidia runtime if creating container using nvidia-docker
ENV NVIDIA_DRIVER_CAPABILITIES=all

# Arguments for the user of the container - these options have to be passed when building the image
ARG USERNAME
ARG USERID
ARG GROUPID

## Setup the users
# Properly setup the root password so that we have control to log in
# and add user to sudoers with no password prompt
RUN echo "root:root" | chpasswd && \
    userdel user &&  \
    groupadd -g $GROUPID -o $USERNAME && \
    useradd -m -u $USERID -g $GROUPID -o -s /bin/bash $USERNAME && \
    echo "$USERNAME:passwd" | chpasswd && \
    adduser $USERNAME sudo && \
    usermod -aG sudo $USERNAME && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers


# Install Python dependencies
RUN apt-get update && apt-get install -y \
    python3 python3-pip && \
    python3 -m pip install --upgrade pip && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN pip install opencv-python matplotlib scipy numpy shapely networkx 


## Install software that is useful and ros dependencies
RUN apt-get update && apt-get install -y \
    nano vim git curl \
    python3-rosdep python3-rosinstall python3-rosinstall-generator \
    python3-wstool python3-rosdep build-essential \
    python3-catkin-tools python3-tk \
    libopencv-dev libomp-dev libdlib-dev libboost-all-dev coinor-libcoinutils-dev coinor-libosi-dev coinor-libclp-dev coinor-libcgl-dev coinor-libcbc-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


# get some ros packages
RUN apt-get update && apt-get install -y \
    ros-noetic-joint-state-controller ros-noetic-twist-mux ros-noetic-ompl \
    ros-noetic-controller-manager ros-noetic-moveit-core ros-noetic-moveit-ros-perception \
    ros-noetic-moveit-ros-move-group ros-noetic-moveit-kinematics ros-noetic-moveit-ros-planning-interface \
    ros-noetic-moveit-simple-controller-manager ros-noetic-moveit-planners-ompl ros-noetic-joy \
    ros-noetic-joy-teleop ros-noetic-teleop-tools ros-noetic-control-toolbox \
    ros-noetic-sound-play ros-noetic-navigation ros-noetic-depthimage-to-laserscan \
    ros-noetic-moveit-commander ros-noetic-slam-toolbox ros-noetic-aruco-msgs \
    ros-noetic-hri ros-noetic-hri-msgs ros-noetic-hri-rviz \
    ros-noetic-human-description ros-noetic-pyhri ros-noetic-audio-common-msgs \
    ros-noetic-cob-map-accessibility-analysis ros-noetic-opengm ros-noetic-libdlib \ 
    pal-gallium-pal-presentation-msgs pal-gallium-pal-navigation-msgs && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Setup the entrypoint
RUN echo "source /opt/ros/gallium/setup.bash" >> /home/$USERNAME/.bashrc && \ 
    echo "PS1=\"(gallium) \$PS1\"" >> /home/$USERNAME/.bashrc && \
    echo "source .bash_convenience" >> /home/$USERNAME/.bashrc

COPY bash_convenience /home/$USERNAME/.bash_convenience

# Run rosdep initialization and update
RUN rosdep init


# Change to the specified user for non-root tasks
USER $USERNAME
WORKDIR "/home/$USERNAME"

RUN rosdep update

# Setup the workspace
RUN mkdir -p catkin_ws/src
RUN mkdir bridge

